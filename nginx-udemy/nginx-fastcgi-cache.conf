worker_processes 1;
#worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;


    # Configure microcache (fastcgi)
    # levels is the depth of directory structure
    fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m; 
    # cache entry key - definition
    # ie: https:// + GET + domain.com + /blog/article
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    # we add a header to our reponses to see if the response was served from the cache
    add_header X-Cache $upstream_cache_status;

    server {
        listen 8090;
        server_name 127.0.0.1;
        
        root /home/greg/workspace/my_repos/nginx-udemy/html;
        
        # this means that by default look for index.php in the root dir and if that fails try index.html
        index index.php index.html;

        # CACHE EXCEPTIONS - some dynamic content we do not want to cache
        
        # Cache by default - variable declared by us
        set $no_cache 0;
        # Check for cache bypass - for example POST request or in this case if
        #  the query parameter skipcache is 1
        if ($arg_skipcache = 1) {
            set $no_cache 1;
        }

        location / {
            #try the requested uri first or uri as directory and if that fails just return 404
            try_files $uri $uri/ =404;
        }

        # regex match so this will take priority       
        location ~ \.php$ {
            # pass php requests to the php-fpm service (fact-cgi)
            include fastcgi.conf; 
            fastcgi_pass unix:/run/php/php7.3-fpm.sock;

            # Enable cache
            fastcgi_cache ZONE_1;
            # return code 200 is valid for 60mins
            fastcgi_cache_valid 200 60m;
            fastcgi_cache_bypass $no_cache;  # bypass the cache if nocache is 1
            fastcgi_no_cache $no_cache;      # do not write to cache folder if nocache is 1
        }

    }

    server {
        listen 8090;
        server_name 127.0.0.2;
    }

}
