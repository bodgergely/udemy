# HTTP2
# http2 is a binary protocol vs http1 which is textual protocol
# * binary protocol is much more compact
# * compressed headers
# * uses persistent connections
# * multiplex streaming - connections are multiplexed
#       it means that multiple resources can be combined into a single data to be transfered
#       http1 requires a dedicated connection for each resource
# * server push - client can be informed of assets along with the initial request
# New connection setup is expensive
#   There is also a maximum number of connections that can be open at the same time by the browser
#   so some connections will have to wait until some current connection is closed
#
# HTTP2: 
#   - Client requests index.html then server tells that browser will require later style.css
#       and script.js. So Client will use the same connection to request those assets
#           instead of opening dedicated connections for each of those
#
#   HTTP2 requires SSL!!! Must use https

worker_processes 1;

events {
  worker_connections 1024;
}

error_log /home/greg/openresty_debug/nginx/logs//error.log debug;

http {

  include mime.types;

  server {

    listen 8443 ssl http2;   # enable http2!!!
    #listen 8090; 
    server_name 127.0.0.2;

    root /home/greg/workspace/my_repos/nginx-udemy/html;  

    index index.php index.html;

    ssl_certificate     /home/greg/workspace/my_repos/nginx-udemy/ssl/certs/127.0.0.2.crt;
    ssl_certificate_key /home/greg/workspace/my_repos/nginx-udemy/ssl/private/127.0.0.2.key;

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.3-fpm.sock;
    }

  }
}
