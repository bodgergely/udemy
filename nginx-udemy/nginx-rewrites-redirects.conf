# nginx rewrites - redirects
# ===============
# rewrite pattern URI
# return statuscode URI
# return 200 "hello bello";  -- this is good
# return 307 /some/path;     -- since this is a redirect we need a URI as the second arg


events {}

http {
    include mime.types;

    server {
        listen 8090;
        server_name localhost;

        root /home/greg/workspace/my_repos/nginx-udemy/html;

        # rewrite directive
        # first arg: the original URI
        # second arg: the new URI
        # when a URI is rewritten it gets reevaluated by nginx as completely new request - more resource intensive
        # the below will rewrite internally the path /user/john -> /greet but the client will not see this change
        # rewrite ^/user/\w+ /greet;      # the \w+ captures at least one word 'w' stands for 'word'
        # rewrite ^/user/(\w+) /greet/$1;      # capture the word by puting into braces we can have a capture group that we can reference with the $1, if we had another capture group we could use $2
       
        rewrite ^/user/(\w+) /greet/$1 last;   # `last` will disable any further rewrites of '/greet/john' so the belwo will not take effect

        # /user/john ->rewrite-> /greet/john/ ->rewrite-> /thumb.png
        rewrite ^/greet/john /thumb.png;


        # this is an example of a simple REDIRECT
        location = /logo {
            # 307 == temporary redirect - simply return the thumb.png under the root dir
            # relative URI, but we could specify a host port etc
            return 307 /thumb.png;
        }

        location /greet {
            return 200 "Hello User\n";
        }

        location = /greet/john {
            return 200 "Hello John\n";
        }



    }

}
