# gzip We can compress the resource if the client can decompress
#=========================


#worker_processes auto;  # auto simply sets the number to the number of logical CPUs
worker_processes 1; 

events {
    # number of connections each worker process can have
    worker_connections 1024;  # check it with ulimit -n
}

error_log /tmp/nginx_error.log debug;


http {
    include mime.types;

    # enable gzip 
    # client needs to indicate that it is willing to accept gzip-ed content
    # Vary: Accept-Encoding tells to client that the encoding can vary based
    # on the client accepted encodings
    # using curl we can achieve this with the below
    # curl -I -H "Accept-Encoding: gzip" http://127.0.0.2:8090/style.css
    gzip on;
    gzip_comp_level 3;
    # gzip_types is an array type so we can use multiple of these
    # or we could use like this:
    # gzip_types text/css text/javascript;
    gzip_types text/css;
    gzip_types text/javascript;

    root /home/greg/workspace/my_repos/nginx-udemy/html;

    server {
        listen 8090;
        server_name 127.0.0.2;
        
        location / {
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js|jpg|png) {
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            # expires after 60 minutes
            expires    60m;
            # expires after 1 month
            #expires    1M;
        }

    }

    server {
        listen 8100;
        server_name 127.0.0.2;
        location / {
            add_header Joska "Furta";
            proxy_pass http://nginx.org;
        }
    }


}
