############### Rate limiting ##############################
###########################################################

worker_processes 1;
#worker_processes auto;

events {
  worker_connections 1024;
}

#error_log /home/greg/openresty_debug/nginx/logs//error.log debug;

http {

  include mime.types;

  # do not emit server version in http response headers
  server_tokens off;
    

  # Rate limiting
  # Define limit zone
  # limit requests to the same request uri to not exceed 60 requests per minute
  limit_req_zone $request_uri zone=MYZONE:10m rate=1r/s;


  # server context to catch http requests and redirect to https
  server {
    listen 8080;
    server_name 127.0.0.2;
    return 301 https://$host:8443$request_uri;
  }

  server {
    listen 8443 ssl http2;   # enable http2!!!
    server_name 127.0.0.2;

    root /home/greg/workspace/my_repos/nginx-udemy/html;  

    index index.php index.html;

    ssl_certificate     /home/greg/workspace/my_repos/nginx-udemy/ssl/certs/127.0.0.2.crt;
    ssl_certificate_key /home/greg/workspace/my_repos/nginx-udemy/ssl/private/127.0.0.2.key;

    # Disable SSL !!!!!!!!!!!!!!!!!!!!!!! 
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Optimize cipher suits
    ssl_prefer_server_ciphers on;
    # prefix the ones with '!' that we do not allow
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # Enable Diffie Hellman Params
    ssl_dhparam /home/greg/workspace/my_repos/nginx-udemy/ssl/diffie-hellman/dhparam.pem;

    # Enable HSTS - 1 year in seconds - NOT TO LOAD anything over HTTP
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions - cache the handshake so we do not need to do it everytime
    ssl_session_cache shared:SSL:40m;   # shared across nginx worker processes - kept in memory - 40MB shared memory
    ssl_session_timeout 4h;             # cache is valid for 4 hours
    ssl_session_tickets on;             # provide the browser with a ticket whcih validates the session - issued by the server  


    # only if the domain embedding the content matches the content itself allow embedding
    add_header X-Frame-Options "SAMEORIGIN";
    # disable cross site scripting
    add_header X-XSS-Protection "1; mode=block";


    location / {
      #aio threads;
      #aio on;
      #directio 1;

      # burst=5 means we do not reject but slow the excution of them down to 1r/s as specified above
      # if nodelay is specified than the request are executed immediately but still
      # adhering to the rate limit definied above
      limit_req zone=MYZONE burst=5 nodelay;
      
      #auth_basic "Secure Area";
      #auth_basic_user_file /home/greg/workspace/my_repos/nginx-udemy/passw/.htpasswd; 

      try_files $uri $uri/ =404;
    }

    location = /helloworld {
        content_by_lua '
                # hello.lua is under openresty_debug/site/lualib
                # you can ask the lua path by package.path or package.cpath
                require "hello".go()
            ';
    }

    location = /foo {
        content_by_lua '
                local say = ngx.say
                say(ngx.ctx)
            ';
    }

  }
}
